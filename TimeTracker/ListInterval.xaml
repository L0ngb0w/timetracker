<UserControl x:Class="TimeTracker.ListInterval"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:tt="clr-namespace:TimeTracker"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <Grid>
        <!--<Button Width="32" Height="32" Style="{StaticResource FlatButtonStyle}">
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="{StaticResource ImageOk}" />
        </Button>-->
        <ListView x:Name="ListEntry" Grid.Column="0" Margin="4" ItemsSource="{Binding Path=TimeEntries}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Start" Width="50" DisplayMemberBinding="{Binding Path=StartTime, StringFormat=HH:mm}" />
                    <GridViewColumn Header="End" Width="50" DisplayMemberBinding="{Binding Path=EndTime, StringFormat=HH:mm}" />
                    <GridViewColumn Header="Interval" Width="50" DisplayMemberBinding="{Binding Path=Difference, StringFormat=hh\\:mm}" />
                    <GridViewColumn Header="Description" Width="470" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <!--<DockPanel HorizontalAlignment="Stretch">
                                        <DockPanel.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True" >
                                                        <Setter Property="TextBox.Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False" >
                                                        <Setter Property="TextBox.Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="2,0,0,0">
                                            <Button x:Name="ButtonDescriptionCommit" Width="20" Height="20" Style="{StaticResource FlatButtonOkStyle}" Margin="0,0,1,0" Click="OnButtonDescriptionCommit" />
                                            <Button Width="20" Height="20" Style="{StaticResource FlatButtonCancelStyle}" Margin="0,0,1,0" />
                                        </StackPanel>
                                        <TextBox x:Name="TextBoxDescription" Text="{Binding Path=TextBox.Text, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Stretch" IsVisibleChanged="TextBox_IsVisibleChanged" />
                                    </DockPanel>
                                    <TextBlock Text="{Binding Path=Text}" VerticalAlignment="Center" >
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="False" >
                                                        <Setter Property="TextBlock.Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True" >
                                                        <Setter Property="TextBlock.Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>-->
                                    <tt:ListIntervalEntry />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</UserControl>
